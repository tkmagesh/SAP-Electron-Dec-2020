JavaScript
    Scripting language for the browser

Data Types
    intrinsic types
        number
        string
        boolean
    complex type
        object
        function
    misc
        undefined

Programming Constructs
    var, if else, switch case, for, for in, while, throw, try catch finally, function

APIs
    Array, Date, Math, Regex, typeof, timer (setTimeout, clearTimeout, setInterval, clearInterval)

Unique Features
    A method is an attribute whose value is a function

Line Oriented
Procedural
Object Based
Object Oriented
Functional
    In NON FUnctional languages, functions are mere 'programming constructs'
    Functions are first class citizens
        (funtions can be treated like data/object)
        - functions can be created using function expression
        - functions can have attributes
        - functions can have methods
        - functions can be passed as arguments to other functions
        - functions can be returned as return value from another function
        - functions are variadic by default
        - functions are objects (called 'callable objects' )

        - when invoked, the following implicit objects are available in a function
            - this
            - arguments
                array like object containing all the argument values passed to the function
                has a 'length' attribute (the # of arguments)
                has support for indexer (arguments[0], arguments[1]....)

    Support for higher order functions

    Concept of 'Invocation Context'

    In JavaScript, it DOES NOT matter where the function is OR who owns the function
        what matters is HOW the function is invoked

    Function Invocation Patterns
        - As a method of an object (obj)
            this -> obj

        - As a function
            this -> global (window)

        - Using the 'call' method of the function

        - Using the 'apply' method of the function

        - Immediately Invoked Function Expression (IIFE)

        - Using the 'new' keyword (Constructor Function)

Constructor Functions
    Functions that behave like class 
    NO syntax differences between a normal function and a constructor function
    To differentiate, a convention is followed : The function name must start with uppercase 
    Constructor Functions are invoked using the 'new' keyword
        - this -> refers to a new object
        - this -> returned by default

dynamic
    An object in javascript is just a dictionary / map / hash 
        - collection of key/value pairs

    Convention :
        When 'write' operation to an attribute
            use the dot notation for updating an existing attribute
            use the [] notation when creating a new attribute

loosely typed


